stages:
  - install
  - test
  - build
  - deploy

default:
  image: node:18-alpine

variables:
  FF_USE_FASTZIP: "true"
  # These can be specified per job or per pipeline
  ARTIFACT_COMPRESSION_LEVEL: "fast"
  CACHE_COMPRESSION_LEVEL: "fast"

workflow:
  rules:
    - if: "$CI_MERGE_REQUEST_IID" # Run pipelines on Merge Requests
    - if: "$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH" # Run pipelines on main branch

# Caches
.node_modules-cache: &node_modules-cache
  key:
    files:
      - yarn.lock
  paths:
    - node_modules/
  policy: pull

.yarn-cache: &yarn-cache
  key: yarn-$CI_JOB_IMAGE
  paths:
    - .yarn

.build-cache: &build-cache
  key: build-$CI_JOB_IMAGE
  paths:
    - .next
    - public
  policy: pull-push

install_dependencies:
  stage: install
  cache:
    - <<: *node_modules-cache
      policy: pull-push # We override the policy
    - <<: *yarn-cache # This is not required if your internet speed is good or if you use a local npm registry.
  script:
    - yarn bootstrap --cache-folder .yarn
    - yarn eslint --help
    - yarn prettier --help

code-test:
  stage: test
  cache:
    - <<: *node_modules-cache
  script:
    - yarn bootstrap --cache-folder .yarn
    - yarn lint
    - yarn prettier
    - yarn check-types
  rules:
    - if: "$CI_MERGE_REQUEST_IID" # Run job on Merge Requests
    - if: "$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH" # Run job on main branch

build:
  stage: build
  cache:
    - <<: *node_modules-cache
    - <<: *build-cache
  script:
    - yarn bootstrap --cache-folder .yarn
    - yarn build
  rules:
    - if: "$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH" # Run job on main branch

deploy-prod:
  stage: deploy
  script:
    - echo "This job deploys something from the branch."
